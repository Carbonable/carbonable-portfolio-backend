package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"fmt"

	"github.com/carbonable/carbonable-portfolio-backend/ent/gql"
	"github.com/carbonable/carbonable-portfolio-backend/internal/model"
)

// Type is the resolver for the type field.
func (r *displayableValueResolver) Type(ctx context.Context, obj *model.DisplayableValue) (string, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Value is the resolver for the value field.
func (r *valueItemResolver) Value(ctx context.Context, obj *model.ValueItem) (string, error) {
	panic(fmt.Errorf("not implemented: Value - value"))
}

// DisplayableValue returns gql.DisplayableValueResolver implementation.
func (r *Resolver) DisplayableValue() gql.DisplayableValueResolver {
	return &displayableValueResolver{r}
}

// ValueItem returns gql.ValueItemResolver implementation.
func (r *Resolver) ValueItem() gql.ValueItemResolver { return &valueItemResolver{r} }

type displayableValueResolver struct{ *Resolver }
type valueItemResolver struct{ *Resolver }
