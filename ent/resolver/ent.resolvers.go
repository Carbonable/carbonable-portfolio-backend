package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"fmt"

	"github.com/carbonable/carbonable-portfolio-backend/ent"
	"github.com/carbonable/carbonable-portfolio-backend/ent/gql"
)

// Abi is the resolver for the abi field.
func (r *projectResolver) Abi(ctx context.Context, obj *ent.Project) (*gql.Abi, error) {
	panic(fmt.Errorf("not implemented: Abi - abi"))
}

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id string) (ent.Noder, error) {
	panic(fmt.Errorf("not implemented: Node - node"))
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []string) ([]ent.Noder, error) {
	panic(fmt.Errorf("not implemented: Nodes - nodes"))
}

// Project returns gql.ProjectResolver implementation.
func (r *Resolver) Project() gql.ProjectResolver { return &projectResolver{r} }

// Query returns gql.QueryResolver implementation.
func (r *Resolver) Query() gql.QueryResolver { return &queryResolver{r} }

type projectResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
